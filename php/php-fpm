#! /bin/sh

### BEGIN INIT INFO
# Provides:          php-fpm
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts php-fpm
# Description:       starts the PHP FastCGI Process Manager daemon
### END INIT INFO

prefix=/usr/local/services/php
exec_prefix=${prefix}

php_fpm_BIN=${exec_prefix}/sbin/php-fpm
php_fpm_CONF=${prefix}/etc/php-fpm.conf
php_fpm_PID=${prefix}/var/run/php-fpm.pid


php_opts="--fpm-config $php_fpm_CONF"
num=3

wait_for_pid () {
        try=0

        while test $try -lt 35 ; do

                case "$1" in
                        'created')
                        if [ -f "$2" ] ; then
                                try=''
                                break
                        fi
                        ;;

                        'removed')
                        if [ ! -f "$2" ] ; then
                                try=''
                                break
                        fi
                        ;;
                esac

                echo -n .
                try=`expr $try + 1`
                sleep 1

        done

}

case "$1" in
        start)
                for ((i=0;i<=$num;i++)); do 
                    echo -n "Starting php-fpm $i "
                    if [ ! -f "${php_fpm_CONF}$i" ] ; then
                        echo ${php_opts}${i}" not exist"
                        continue
                    fi
                    $php_fpm_BIN $php_opts""$i
                    if [ "$?" != 0 ] ; then
                            echo " failed"
                            continue
                    fi
                    wait_for_pid created $php_fpm_PID""$i
                    if [ -n "$try" ] ; then
                            echo " failed"
                            continue
                    else
                            echo " done"
                    fi
                done
        ;;

        stop)
                for ((i=0;i<=$num;i++));do
                    echo -n "Gracefully shutting down php-fpm $i "
                    if [ ! -r $php_fpm_PID""$i ] ; then
                            echo "warning, $php_fpm_PID""$i pid file not found - php-fpm is not running ?"
                            continue
                    fi

                    kill -QUIT `cat $php_fpm_PID""$i`

                    wait_for_pid removed $php_fpm_PID""$i

                    if [ -n "$try" ] ; then
                            echo " failed. Use force-quit"
                            continue
                    else
                            echo " done"
                    fi
                done
        ;;

        force-quit)
                for ((i=0;i<=$num;i++)); do 
                    echo -n "Terminating php-fpm $i "

                    if [ ! -r $php_fpm_PID""$i ] ; then
                            echo "warning, $php_fpm_PID""$i pid file not found - php-fpm is not running ?"
                            continue
                    fi

                    kill -TERM `cat $php_fpm_PID""$i`

                    wait_for_pid removed $php_fpm_PID""$i

                    if [ -n "$try" ] ; then
                            echo " failed"
                            continue
                    else
                            echo " done"
                    fi
                done
        ;;

        restart)
                $0 stop
                $0 start
		rm -rf /dev/shm/jvcache/*
        ;;

        reload)
                for ((i=0;i<=$num;i++)); do 
                    echo -n "Reload service php-fpm $i "

                    if [ ! -r $php_fpm_PID""$i ] ; then
                            echo "warning, pid $php_fpm_PID""$i file found - php-fpm is not running ?"
                            continue
                    fi

                    kill -USR2 `cat $php_fpm_PID""$i`

                    echo " done"
                done
        ;;

        *)
                echo "Usage: $0 {start|stop|force-quit|restart|reload}"
                exit 1
        ;;

esac
